<i>--><complex_statement><spaces>			==>	<o>--><complex_statement>;
<statement_list>--><statement>;
<statement_list>--><statement><spaces><statement_list>	==>	<statement_list>--><statement><statement_list>;
<statement>--><assign_statement>			==>	<statement>--><assign_statement>;
<statement>--><print_statement>			==>	<statement>--><print_statement>;
<statement>--><while_statement>				==>	<statement>--><while_statement>;
<statement>--><if_statement>				==>	<statement>--><if_statement>;
<statement>--><complex_statement>			==>	<statement>--><complex_statement>;
<statement>--><define_statement>			==>	<statement>--><define_statement>;
<statement>--><e_statement>			==>	<statement>--><e_statement>;
<assign_statement>--><variable>"="<arithmetic_expression>		==>	<assign_statement>-->($SET, <variable>, <arithmetic_expression>);
<e_statement>--><arithmetic_expression>				==> <e_statement>--><arithmetic_expression>;
<while_statement>-->"$while("<arithmetic_expression>")\n"<statement>	==>	<while_statement>-->($LOOP, ($IGNORE,($NOT, ($EQ, <arithmetic_expression>, "0"))), ($IGNORE, <statement>));

<if_statement>-->"$if("<arithmetic_expression>")\n"<statement>"\n$else\n"<statement2>			==>	<if_statement>-->($COND, ($NOT, ($EQ, <arithmetic_expression>, "0")), ($IGNORE,<statement>), $TRUE, ($IGNORE,<statement2>));
<statement2>--><statement>					==> <statement2>--><statement>;
<complex_statement>-->"{\n"<statement_list>"}"	==> <complex_statement>-->($PUSH_DATA)<statement_list>($POP_DATA);
<variable>--><identifier>					==>		<variable>--><identifier>;

include "identifier.xyz"
include "string.xyz"

#arithmetic_expression
<arithmetic_expression>--><arithmetic_expression>"+"<arithmetic_term>		==>		<arithmetic_expression>-->($ADD, <arithmetic_expression>, <arithmetic_term>);
<arithmetic_expression>--><arithmetic_expression>"-"<arithmetic_term>		==>		<arithmetic_expression>-->($SUB, <arithmetic_expression>, <arithmetic_term>);
<arithmetic_expression>--><arithmetic_term>		==>		<arithmetic_expression>--><arithmetic_term>;
<arithmetic_term>--><arithmetic_factor>		==>		<arithmetic_term>--><arithmetic_factor>;
<arithmetic_term>--><arithmetic_term>"*"<arithmetic_factor>		==>		<arithmetic_term>-->($MUL, <arithmetic_term>, <arithmetic_factor>);
<arithmetic_term>--><arithmetic_term>"/"<arithmetic_factor>		==>		<arithmetic_term>-->($DIV, <arithmetic_term>, <arithmetic_factor>);
<arithmetic_factor>--><variable>		==>		<arithmetic_factor>-->($GET, <variable>);
<arithmetic_factor>-->'"'<string>'"'		==>		<arithmetic_factor>--><string>;
<arithmetic_factor>-->"'"<original_string>"'"	==>		<arithmetic_factor>--><original_string>;
<arithmetic_factor>--><integer>;
<arithmetic_factor>-->"("<arithmetic_expression>")"		==>		<arithmetic_factor>--><arithmetic_expression>;
<arithmetic_factor>--><function_call>		==>		<arithmetic_factor>--><function_call>;
<integer>--><digit>	==>		<integer>--><digit>;
<integer>--><digit><integer>	==>		<integer>--><digit><integer>;

include "space.xyz"

<define_statement>--><function_name>"("<function_params_list>")="<spaces><statement>
	==>		<define_statement>-->($SET, <function_name>, ($IGNORE,<statement>));
<function_name>--><identifier>		
	==>		<function_name>--><identifier>;
<function_params_list>--><function_param>		
	==>		<function_params_list>--><function_param>;
<function_params_list>--><function_param>","<function_params_list>	
	==>		<function_params_list>--><function_param>","<function_params_list>;

<function_param>--><identifier>		
	==>		<function_param>--><identifier>;
<function_call>--><function_name>"("<function_call_params_list>")"	
	==>		<function_call>-->($PUSH_DATA)<function_call_params_list>($EVAL, ($GET, <function_name>))($POP_DATA);
<function_call_params_list>--><function_call_param>		
	==>		<function_call_params_list>--><function_call_param>;
<function_call_params_list>--><function_call_param>","<function_call_params_list>	
	==>		<function_call_params_list>--><function_call_param><function_call_params_list>;
<function_call_param>--><function_param>"="<arithmetic_expression>		
	==>		<function_call_param>-->($DEF, <function_param>, <arithmetic_expression>);

