<i>--><statement_list>					==>	<o>-->($PUSH_DATA)<statement_list>($POP_DATA);
<statement_list>-->""					==>	<statement_list>-->"";
<statement_list>--><statement>"\n"<statement_list>	==>	<statement_list>--><statement><statement_list>;
<statement>--><assign_statement>			==>	<statement>--><assign_statement>;
<statement>--><print_statement>			==>	<statement>--><print_statement>;
<statement>--><while_statement>				==>	<statement>--><while_statement>;
<statement>--><if_statement>				==>	<statement>--><if_statement>;
<statement>--><complex_statement>			==>	<statement>--><complex_statement>;
<statement>--><define_statement>			==>	<statement>--><define_statement>;
<statement>--><e_statement>			==>	<statement>--><e_statement>;
<assign_statement>--><variable>"="<e>		==>	<assign_statement>-->($SET, ($CAST,$STRING,($COMPACT,<variable>)), <e>);
<print_statement>-->"$print "<e>				==> <print_statement>--><e>"\n";
<e_statement>--><e>				==> <e_statement>--><e>;
<while_statement>-->"$while("<e>")\n"<statement>	==>	<while_statement>-->($LOOP, ($IGNORE,($NOT, ($EQ, <e>, ($COMPACT,"0")))), ($IGNORE, <statement>));
<if_statement>-->"$if("<e>")\n"<statement>"\n$else\n"<statement2>			==>	<if_statement>-->($COND, ($NOT, ($EQ, <e>, ($COMPACT,"0"))), ($IGNORE,<statement>), ($IGNORE,<statement2>));
<statement2>--><statement>					==> <statement2>--><statement>;
<complex_statement>-->"{\n"<statement_list>"}"	==> <complex_statement>--><statement_list>;
<variable>--><identifier>					==>		<variable>--><identifier>;
<identifier>--><letter>==><identifier>--><letter>;
<identifier>--><letter><letter_digit_string>==><identifier>--><letter><letter_digit_string>;
<letter_digit_string>--><letter>==><letter_digit_string>--><letter>;
<letter_digit_string>--><digit>==><letter_digit_string>--><digit>;
<letter_digit_string>--><letter><letter_digit_string>==><letter_digit_string>--><letter><letter_digit_string>;
<letter_digit_string>--><digit><letter_digit_string>==><letter_digit_string>--><digit><letter_digit_string>;
<letter>-->"a"==><letter>-->"a";
<letter>-->"b"==><letter>-->"b";
<letter>-->"c"==><letter>-->"c";
<letter>-->"d"==><letter>-->"d";
<letter>-->"e"==><letter>-->"e";
<letter>-->"f"==><letter>-->"f";
<letter>-->"g"==><letter>-->"g";
<letter>-->"h"==><letter>-->"h";
<letter>-->"i"==><letter>-->"i";
<letter>-->"j"==><letter>-->"j";
<letter>-->"k"==><letter>-->"k";
<letter>-->"l"==><letter>-->"l";
<letter>-->"m"==><letter>-->"m";
<letter>-->"n"==><letter>-->"n";
<letter>-->"o"==><letter>-->"o";
<letter>-->"p"==><letter>-->"p";
<letter>-->"q"==><letter>-->"q";
<letter>-->"r"==><letter>-->"r";
<letter>-->"s"==><letter>-->"s";
<letter>-->"t"==><letter>-->"t";
<letter>-->"u"==><letter>-->"u";
<letter>-->"v"==><letter>-->"v";
<letter>-->"w"==><letter>-->"w";
<letter>-->"x"==><letter>-->"x";
<letter>-->"y"==><letter>-->"y";
<letter>-->"z"==><letter>-->"z";
<letter>-->"A"==><letter>-->"A";
<letter>-->"B"==><letter>-->"B";
<letter>-->"C"==><letter>-->"C";
<letter>-->"D"==><letter>-->"D";
<letter>-->"E"==><letter>-->"E";
<letter>-->"F"==><letter>-->"F";
<letter>-->"G"==><letter>-->"G";
<letter>-->"H"==><letter>-->"H";
<letter>-->"I"==><letter>-->"I";
<letter>-->"J"==><letter>-->"J";
<letter>-->"K"==><letter>-->"K";
<letter>-->"L"==><letter>-->"L";
<letter>-->"M"==><letter>-->"M";
<letter>-->"N"==><letter>-->"N";
<letter>-->"O"==><letter>-->"O";
<letter>-->"P"==><letter>-->"P";
<letter>-->"Q"==><letter>-->"Q";
<letter>-->"R"==><letter>-->"R";
<letter>-->"S"==><letter>-->"S";
<letter>-->"T"==><letter>-->"T";
<letter>-->"U"==><letter>-->"U";
<letter>-->"V"==><letter>-->"V";
<letter>-->"W"==><letter>-->"W";
<letter>-->"X"==><letter>-->"X";
<letter>-->"Y"==><letter>-->"Y";
<letter>-->"Z"==><letter>-->"Z";
<letter>-->"_"==><letter>-->"_";
<digit>-->"0"==><digit>-->"0";
<digit>-->"1"==><digit>-->"1";
<digit>-->"2"==><digit>-->"2";
<digit>-->"3"==><digit>-->"3";
<digit>-->"4"==><digit>-->"4";
<digit>-->"5"==><digit>-->"5";
<digit>-->"6"==><digit>-->"6";
<digit>-->"7"==><digit>-->"7";
<digit>-->"8"==><digit>-->"8";
<digit>-->"9"==><digit>-->"9";
<e>--><e>"+"<t>		==>		<e>-->($ADD, <e>, <t>);
<e>--><e>"-"<t>		==>		<e>-->($SUB, <e>, <t>);
<e>--><t>		==>		<e>--><t>;
<t>--><f>		==>		<t>--><f>;
<t>--><t>"*"<f>		==>		<t>-->($MUL, <t>, <f>);
<t>--><t>"/"<f>		==>		<t>-->($DIV, <t>, <f>);
<f>--><variable>		==>		<f>-->($GET, ($CAST,$STRING,($COMPACT,<variable>)));
<f>--><n>		==>		<f>-->($CAST, $INTEGER, ($COMPACT,<n>));
<f>-->"("<e>")"		==>		<f>--><e>;
<f>--><r>		==>		<f>--><r>;
<n>--><digit>	==>		<n>--><digit>;
<n>--><digit><n>	==>		<n>--><digit><n>;

<define_statement>--><fn>"("<pl>")=\n"<statement>==>		<define_statement>-->($SET, ($CAST,$STRING,($COMPACT,<fn>)), ($IGNORE,<statement>));
<fn>--><identifier>		==>		<fn>--><identifier>;
<pl>--><p>		==>		<pl>--><p>;
<pl>--><p>","<pl>	==>		<pl>--><p>","<pl>;
<p>--><identifier>		==>		<p>--><identifier>;
<r>--><fn>"("<ll>")"	==>		<r>-->($PUSH_DATA)<ll>($EVAL, ($GET, ($CAST,$STRING,($COMPACT,<fn>))))($POP_DATA);
<ll>--><l>		==>		<ll>--><l>;
<ll>--><l>","<ll>	==>		<ll>--><l><ll>;
<l>--><p>"="<e>		==>		<l>-->($DEF, ($CAST,$STRING,($COMPACT,<p>)), <e>);
